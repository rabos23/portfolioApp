{"version":3,"sources":["firebase.js","contexts/AuthContext.js","contexts/DataContext.js","components/Logout.js","components/Footer.js","components/Content.js","components/ForgotPassword.js","components/Login.js","components/PrivateRoute.js","components/Signup.js","components/Activation.js","components/UpdatePassword.js","components/useFetch2.js","components/UpdateProfile.js","components/Dashboard.js","components/Graph.js","components/PriceHero.js","pages/Actualprice.js","pages/Dashboardpage.js","components/Hero.js","pages/Contactpage.js","pages/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","generateUserDocument","user","a","userRef","doc","uid","get","exists","email","displayName","photoURL","cryptoList","fiatList","set","showMsg","console","error","useEffect","unsubscribe","onAuthStateChanged","log","value","signup","password","createUserWithEmailAndPassword","then","sendEmailVerification","catch","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updatePassword","updateEmail","reSendEmailVerification","Provider","UserContext","useData","UserProvider","userData","setUserData","setData","data","type","cityRef","collection","update","onSnapshot","snapshot","Logout","setError","history","useHistory","className","Button","variant","onClick","push","Footer","props","Container","Row","Col","md","sm","isLogged","Content","fluid","size","ForgotPassword","emailRef","useRef","msg","setMsg","e","preventDefault","current","Form","onSubmit","style","alignItems","Alert","Group","id","Label","Control","ref","required","disabled","to","Login","passwordRef","marginTop","PrivateRoute","Component","component","rest","render","Signup","passwordConfirmRef","Activation","emailVerified","setVerified","message","interval","setInterval","reload","ok","clearInterval","timer","setTimeout","clearTimeout","Jumbotron","Spinner","animation","UpdatePassword","oldPasswordRef","reauth","placeholder","useFetch","url","products","setProducts","getProducts","useCallback","fetch","res","json","Updateprofile","Option","Select","setShowMsg","selectedC","setSelectedC","selectedF","setSelectedF","username","setUsername","usernameRef","Object","getOwnPropertyNames","market_data","current_price","onChange","mode","width","defaultValue","optionLabelProp","map","c","key","symbol","label","toUpperCase","charAt","slice","checked","Dashboard","toggled","setToggle","toggled1","setToggle1","background","color","border","padding","textAlign","cardText","marginLeft","cardHeader","backgroundColor","Card","Body","Header","Text","Graph","labels","datasets","lineTension","borderColor","isGreen","borderJoinStyle","borderCapStyle","borderWidth","pointRadius","pointHitRadius","crypto","toLowerCase","keys","el","Date","setDate","getDate","toLocaleDateString","options","legend","scales","xAxes","ticks","reverse","beginAtZero","display","gridLines","drawBorder","yAxes","maxTicksLimit","elements","line","fill","PriceHero","isShow","setIsShow","handleClick","price_change_percentage_24h","name","xs","price_change_24h","UpOutlined","DownOutlined","Actualprice","fewCrypto","setFewCrypto","defaultCrypto","setDefaultCrypto","setCryptoList","cryptoData","setCryptoData","response","data2","filter","obj","includes","length","getData","href","item","title","subTitle","text","Dashboardpage","verified","Hero","Contact","handleChange","event","target","setState","handleSubmit","emailSent","state","this","htmlFor","as","rows","Homepage","todos","setTodos","rateColor","setRateColor","fieldsValue","values","duedate","format","newTodos","getUserStars","points","exColor","i","stars","ExclamationOutlined","statusUpdate","status","taskid","onFinish","onFinishFailed","errorInfo","initialValues","slider","span","Item","rules","prefix","RightOutlined","offset","TextArea","count","onHoverChange","changeRateColor","character","index","htmlType","subject","DeleteTwoTone","details","CheckCircleTwoTone","twoToneColor","LeftOutlined","App","home","actualprice","contact","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","path","exact","Contactpage","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f059f107.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: \"AIzaSyC1BtchmG7yC1j0SjuO4rfIPWqaH0kj6kQ\",\r\n  authDomain: \"portfolioapp-74be9.firebaseapp.com\",\r\n  projectId: \"portfolioapp-74be9\",\r\n  storageBucket: \"portfolioapp-74be9.appspot.com\",\r\n  messagingSenderId: \"863415751341\",\r\n  appId: \"1:863415751341:web:5828fd0abc0b4922a66c24\",\r\n});\r\nexport const auth = app.auth();\r\nexport const firestore = app.firestore();\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { auth, firestore } from \"../firebase\";\r\n\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n \r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n          .then((user) => user.user.sendEmailVerification()).catch(error => [error])\r\n          \r\n  }\r\n\r\n  function reSendEmailVerification(){\r\n    return auth.currentUser.sendEmailVerification()\r\n  }\r\n\r\n  \r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return auth.currentUser.updateEmail(email);\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return auth.currentUser.updatePassword(password);\r\n  }\r\n  \r\n  \r\n\r\n\r\n  function onAuthStateChange() {\r\n    return auth.onAuthStateChanged( user => {\r\n      if (user) {\r\n        setCurrentUser(user)\r\n        generateUserDocument(user)\r\n                \r\n        console.log(\"AuthContext:The user is logged in\");\r\n      } else {\r\n        setCurrentUser(\"\")\r\n        \r\n        console.log(\"AuthContext:The user is not logged in\");\r\n        console.log(currentUser)\r\n      }\r\n      setLoading(false)\r\n    });\r\n  }\r\n  const generateUserDocument = async (user) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot =  await userRef.get();\r\n    if (!snapshot.exists) {\r\n      const { email, displayName, photoURL, uid } = user;\r\n      const cryptoList = [];\r\n      const fiatList= [];\r\n      const showMsg=true;\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          photoURL,uid,cryptoList, fiatList, showMsg\r\n          \r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error creating user document\", error);\r\n      }\r\n    }\r\n   \r\n  }\r\n /*  const getUserDocument = useCallback(async uid => {\r\n      if (!uid) return null;\r\n      try {\r\n        const userDocument = await firestore.doc(`users/${uid}`).get();\r\n        setLoading(false);\r\n        return {\r\n          uid,\r\n          ...userDocument.data()\r\n        };\r\n        \r\n      } catch (error) {\r\n        console.error(\"Error fetching user\", error);\r\n      }\r\n    },[currentUser]); */\r\n\r\n    useEffect(() => {\r\n      const unsubscribe = onAuthStateChange();\r\n      return () => {\r\n        unsubscribe();\r\n      };\r\n    }, [currentUser]);  \r\n\r\n  const value = {\r\n    currentUser,\r\n    loading,\r\n    signup,\r\n    login,\r\n    logout,\r\n    resetPassword,\r\n    updatePassword,\r\n    updateEmail,\r\n    generateUserDocument, \r\n    reSendEmailVerification\r\n  \r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport \"../index.css\";\r\nimport { firestore } from \"../firebase\";\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport function useData() {\r\n  return useContext(UserContext);\r\n}\r\n\r\nexport function UserProvider({ children }) {\r\n  const { currentUser } = useAuth();\r\n  const [loading, setLoading] = useState();\r\n  const [userData, setUserData] = useState([]);\r\n\r\n  function logout() {\r\n    setUserData();\r\n  }\r\n\r\n  /*  https://api.coingecko.com/api/v3/coins/bitcoin/ \r\n  https://github.com/miscavage/CoinGecko-API\r\n  \r\n  */\r\n  \r\n\r\n  const setData = async (data, type) => {\r\n    const cityRef = firestore.collection(\"users\").doc(currentUser.uid);\r\n    console.log(\"Data write:\" + type);\r\n    // Set the 'capital' field of the city\r\n\r\n    switch (type) {\r\n      case \"cryptoList\":\r\n        await cityRef.update({ cryptoList: data });\r\n        console.log(\"Data:\" + data + \" was succesful\");\r\n        break;\r\n      case \"fiatList\":\r\n        await cityRef.update({ fiatList: data });\r\n        console.log(\"Data:\" + data + \" was succesful\");\r\n        break;\r\n      case \"displayName\":\r\n        await cityRef.update({ displayName: data });\r\n        console.log(\"Data:\" + data + \" was succesful\");\r\n        break;\r\n      case \"showMsg\":\r\n        await cityRef.update({ showMsg: data });\r\n        console.log(\"Data:\" + data + \" was succesful\");\r\n        break;\r\n      default:\r\n        console.log(\"default\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setLoading(true);\r\n      firestore\r\n        .collection(`users`)\r\n        .doc(`${currentUser.uid}`)\r\n        .onSnapshot((snapshot) => {\r\n          if (snapshot) {\r\n            // we have something\r\n            setUserData(snapshot.data());\r\n\r\n            setLoading(false);\r\n          }\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [firestore, currentUser]);\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        loading,\r\n        userData,\r\n        setData,\r\n        logout,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useData } from \"../contexts/DataContext\";\r\n\r\nexport default function Logout() {\r\n    const { logout, currentUser } = useAuth();\r\n    const {data} = useData();\r\n    const [error, setError] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n     function handleLogout() {\r\n        setError(\"\");\r\n        try {\r\n           logout();\r\n            data.logout();\r\n          history.push(\"/login\");\r\n        } catch {\r\n          setError(\"Failed to logout\");\r\n        }\r\n      }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-center mt-2\">\r\n        <Button variant=\"link\" onClick={handleLogout}>\r\n          Log out\r\n        </Button>\r\n        {error ? error: \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Logout from \"../components/Logout\"\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nfunction Footer(props) {\r\n  return (\r\n    <footer className=\"mt-5\">\r\n      <Container>\r\n        <Row className=\"border-top justify-content-between p-3\">\r\n          <Col className=\"p-0 text-center\" md={3} sm={12}>\r\n            World of Automatization\r\n          </Col>\r\n          {props.isLogged ? <Logout/> : \"\"}\r\n          <Col className=\"p-0 d-flex justify-content-center \" md={2}>\r\n          \r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nfunction Content(props) {\r\n  return (\r\n    <Container fluid={true}>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={props.size}>{props.children}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\nexport default Content;","import React, { useRef, useState } from \"react\";\r\nimport { Alert, Button, Form } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Content from \"../components/Content\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nexport default function ForgotPassword(props) {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const { resetPassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setMsg(\"\");\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await resetPassword(emailRef.current.value);\r\n      setMsg(\"Password has been succesfully reseted\");\r\n    } catch {\r\n      setError(\"Failed to reset password\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Content size={props.size}>\r\n        <Form\r\n          onSubmit={handleSubmit}\r\n          style={{ alignItems: \"center\" }}\r\n          className=\"mt-4\"\r\n        >\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {msg && <Alert variant=\"success\">{msg}</Alert>}\r\n          <Form.Group id=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"email\" ref={emailRef} required />\r\n          </Form.Group>\r\n\r\n          <Button\r\n            disabled={loading}\r\n            style={{ alignItems: \"center\" }}\r\n            className=\"d-inline-block center w-100 \"\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Reset Password\r\n          </Button>\r\n          {msg && (\r\n            <div className=\"text-center mt-2\">\r\n              <Link to=\"/login\"> Log in</Link>\r\n            </div>\r\n          )}\r\n        </Form>\r\n      </Content>\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Alert, Button, Form } from \"react-bootstrap\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport Content from \"../components/Content\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nexport default function Login(props) {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const { login, currentUser } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false); \r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      setError(\"\");\r\n      \r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n         \r\n       \r\n      \r\n    } catch {\r\n      setError(\"Failed to login\");\r\n    }\r\n    setLoading(false);\r\n   \r\n  }\r\n\r\n  return (\r\n    <>\r\n      {currentUser ? <Redirect to=\"/home\" /> : \"\"}\r\n      <Content size={props.size}>\r\n        {error && <Alert variant=\"danger\" style={{marginTop:\"2%\"}}>{error}</Alert>}\r\n        <Form onSubmit={handleSubmit} style={{ alignItems: \"center\" }}>\r\n          <Form.Group id=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"email\" ref={emailRef} required />\r\n          </Form.Group>\r\n\r\n          <Form.Group id=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" ref={passwordRef} required />\r\n          </Form.Group>\r\n\r\n          <Button\r\n            disabled={loading}\r\n            style={{ alignItems: \"center\" }}\r\n            className=\"d-inline-block center w-100\"\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n           {loading ? \"Logging in...\": \"Log in\"}\r\n          </Button>\r\n          <div className=\"text-center mt-2\">\r\n            Need an account? <Link to=\"/signup\"> Sign up</Link>\r\n          </div>\r\n          <div className=\"text-center mt-2\">\r\n            Forgot password? <Link to=\"/ForgotPassword\"> Reset password</Link>\r\n          </div>\r\n        </Form>\r\n      </Content>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return currentUser ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        );\r\n      }}\r\n    ></Route>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport Content from \"../components/Content\";\r\nimport {  useAuth } from \"../contexts/AuthContext\";\r\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\r\nimport { set } from \"lodash-es\";\r\n\r\nexport default function Signup(props) {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const { currentUser, signup, logout, reSendEmailVerification } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    \r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Password do not match\");\r\n    }\r\n    try {\r\n           \r\n       const [error] = await signup(emailRef.current.value, passwordRef.current.value)\r\n      \r\n      \r\n     \r\n      /*\r\n           PRVNE VYPNOUT TIMEOUT A UDEALT BEZ TOHO FUNKCNI LOGIN/SIGHNUP\r\n           */\r\n         setError(\"\"+error)\r\n           \r\n    } catch(error) {\r\n      \r\n      setError(\"Failed to create an account:\"+error);\r\n    }   \r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n{currentUser ? <Redirect to=\"/home\" />: \"\"}\r\n      <Content size={props.size}>\r\n        {error && <Alert variant=\"danger\" style={{marginTop:\"2%\"}}>{error}</Alert>}\r\n        {msg && <Alert variant=\"success\" style={{marginTop:\"2%\"}}>{msg}</Alert>}\r\n        \r\n        <Form onSubmit={handleSubmit} style={{ alignItems: \"center\" }}>\r\n          <Form.Group id=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"email\" ref={emailRef} required />\r\n          </Form.Group>\r\n\r\n          <Form.Group id=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" ref={passwordRef} required />\r\n          </Form.Group>\r\n\r\n          <Form.Group id=\"password-confirm\">\r\n            <Form.Label>Password Confirmation</Form.Label>\r\n            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n          </Form.Group>\r\n\r\n          <Button\r\n            disabled={loading}\r\n            style={{ alignItems: \"center\" }}\r\n            className=\"d-inline-block center w-100\"\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            SIGN UP\r\n          </Button>\r\n          <div className=\"text-center mt-2\">\r\n            Already have an account? <Link to=\"/login\">Log in</Link>\r\n          </div>\r\n        </Form>\r\n      </Content>\r\n    </>\r\n  );\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport { Container, Row, Button, Spinner } from \"react-bootstrap\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport { auth } from \"../firebase\";\r\nfunction Activation() {\r\n    const { reSendEmailVerification, currentUser} = useAuth();\r\n    const [verified, setVerified] = useState(currentUser.emailVerified);\r\n    \r\n    const [loading, setLoading] = useState(false)\r\n    const [msg, setMsg] = useState()\r\n    \r\n  const history = useHistory();\r\n\r\n\r\n    async function reSendEmail(e) {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        try {\r\n          setMsg(\"\");\r\n          await reSendEmailVerification();\r\n        setMsg(\"Verification email was sended\")\r\n          \r\n          \r\n        } catch(error) {\r\n          setMsg(error.message);\r\n        }\r\n        setLoading(false);\r\n      }\r\n/*       const interval = setInterval(() => {\r\n        auth.currentUser.reload()\r\n        .then(ok => {if(currentUser.emailVerified){\r\n          setMsg(\"Email verified\")\r\n          clearInterval(interval)\r\n        }})\r\n        \r\n      }, 1000);\r\n */\r\n  \r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      console.log(currentUser.emailVerified)\r\n      if(currentUser){\r\n        auth.currentUser.reload().then((ok) => {\r\n          if(currentUser.emailVerified){\r\n            setVerified(currentUser.emailVerified)\r\n            clearInterval(interval)\r\n            setMsg(\"Verified!\")\r\n            const timer = setTimeout(() => {\r\n              history.push(\"/dashboard\")\r\n              clearTimeout(timer)\r\n            }, 2000);\r\n          }\r\n        })\r\n        }\r\n      }\r\n    , 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Jumbotron className=\"jumbotron-fluid mt-5\">\r\n      <Container>\r\n        <Row className=\"justify-content-center\">\r\n         \r\n            Your account is not activated. Please check your email!\r\n          \r\n        </Row>\r\n\r\n        <Row className=\"justify-content-center\">     \r\n            <Button variant=\"link\" className=\"text-link\" onClick={reSendEmail}>\r\n            Click for resend email \r\n            </Button>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n        {loading ? <Spinner animation=\"border\" style={{marginTop:\"2%\"}}/>: \"\"}\r\n       \r\n            {msg ? msg : \"\"}\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\nexport default Activation;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nexport default function UpdatePassword() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const oldPasswordRef = useRef();\r\n  const { login, currentUser, reauth } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  /* \r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    \r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Password do not match\");\r\n    }\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await reauth(emailRef.current.value)\r\n      await signup(emailRef.current.value, passwordRef.current.value); \r\n      history.push(\"/login\");\r\n    } catch {\r\n      setError(\"Failed to create an account\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n   */\r\n  return (\r\n    /* \r\n    CHANGE NOT WORKING PROPERLY : Emain same not working, while changing credentials automatically logout and login -> redirect to login page\r\n    */\r\n    <div>\r\n    <Form style={{ alignItems: \"center\", marginTop: \"10px\" }}>\r\n\r\n      <Form.Group id=\"old_password\">\r\n        <Form.Label>Old Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          required\r\n          placeholder=\"Leave blank for remain same\"\r\n          ref={oldPasswordRef}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group id=\"new_password\">\r\n        <Form.Label>New Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          required\r\n          placeholder=\"Leave blank for remain same\"\r\n          ref={passwordRef}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group id=\"new_password\">\r\n        <Form.Label>Repeat new password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          required\r\n          placeholder=\"Leave blank for remain same\"\r\n          ref={passwordConfirmRef}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Button\r\n        style={{ alignItems: \"center\" }}\r\n        className=\"d-inline-block center\"\r\n        variant=\"outline-secondary\"\r\n        type=\"submit\"\r\n      >\r\n        Update profile\r\n      </Button>\r\n    </Form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nexport const useFetch = (url) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const getProducts = useCallback(async () => {\r\n    await fetch(url, {})\r\n      .then((res) => res.json())\r\n      .then((json) => setProducts(json));\r\n\r\n    setLoading(false);\r\n\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, [url, getProducts]);\r\n  return { loading, products };\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nimport { Divider, Select, Switch } from \"antd\";\r\n\r\nimport { useFetch } from \"./useFetch2\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useData } from \"../contexts/DataContext\";\r\n\r\nexport default function Updateprofile(props) {\r\n  const { currentUser } = useAuth();\r\n  const { setData, userData } = useData();\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { Option } = Select;\r\n  const [showMsg,setShowMsg] = useState()\r\n  const [selectedC, setSelectedC] = useState(userData.cryptoList);\r\n  const [selectedF, setSelectedF] = useState(userData.fiatList);\r\n  const [username, setUsername] = useState(userData.username);\r\n\r\n  const url = \"http://api.coingecko.com/api/v3/coins/\";\r\n  const fetch = useFetch(url);\r\n\r\n  function handleChangeC(value) {\r\n    setSelectedC(value);\r\n    setData(value, \"cryptoList\");\r\n    /* ulozeni do State \r\n    https://www.robinwieruch.de/react-derive-state-props\r\n    */\r\n  }\r\n  function handleChangeF(value) {\r\n    setSelectedF(value);\r\n    setData(value, \"fiatList\");\r\n\r\n    /* ulozeni do State */\r\n  }\r\n\r\n  const usernameRef = useRef();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      await setData(usernameRef.current.value, \"displayName\");\r\n    } catch {\r\n      setError(\"Failed to login\");\r\n    }\r\n  }\r\n  async function showMsgHandle(e) {\r\n    console.log(e);\r\n    try {\r\n      setError(\"\");\r\n\r\n      await setData(e, \"showMsg\");\r\n    } catch {\r\n      setError(\"Failed to login\");\r\n    }\r\n  }\r\n if(!fetch.loading){console.log(Object.getOwnPropertyNames(fetch.products[1].market_data.current_price))}\r\n  useEffect(() => {\r\n    if (currentUser && userData) {\r\n      setUsername(userData.displayName);\r\n      setShowMsg(userData.showMsg);\r\n    }\r\n  }, [userData.displayName, userData.showMsg]);\r\n  return (\r\n    /* \r\n    CHANGE NOT WORKING PROPERLY : Emain same not working, while changing credentials automatically logout and login -> redirect to login page\r\n    Data store provider -> if !exists then create default -> also default prices\r\n    */\r\n    <div>\r\n      {error ? error : \"\"}\r\n      <Form\r\n        onChange={handleSubmit}\r\n        style={{ alignItems: \"center\", marginTop: \"10px\" }}\r\n      >\r\n        <Form.Group id=\"username\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            type=\"username\"\r\n            placeholder={username ? username : \"Put username u want\"}\r\n            ref={usernameRef}\r\n          />\r\n        </Form.Group>\r\n        <Divider />\r\n        {/*  <Form.Group id=\"email\">\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control\r\n          type=\"email\"\r\n          required\r\n          placeholder={props.email}\r\n          ref={emailRef}\r\n        />\r\n      </Form.Group> */}\r\n      </Form>\r\n\r\n      <Form style={{ alignItems: \"center\", marginTop: \"10px\" }}>\r\n        <Form.Label>Choose crypto currency</Form.Label>\r\n        <Select\r\n          mode=\"multiple\"\r\n          style={{ width: \"100%\" }}\r\n          defaultValue={selectedC}\r\n          placeholder=\"Select currency\"\r\n          onChange={handleChangeC}\r\n          optionLabelProp=\"label\"\r\n        >\r\n          {!fetch.loading ? fetch.products.map((c) =>\r\n             (\r\n              <Option key={c.id} value={c.symbol} label={c.symbol.toUpperCase()}>\r\n                {c.id.charAt(0).toUpperCase() + c.id.slice(1)}\r\n              </Option>\r\n            ) \r\n          ) : null}\r\n        </Select>\r\n\r\n        <Divider />\r\n\r\n        <Form.Label>Choose fiat currency</Form.Label>\r\n        <Select\r\n          mode=\"multiple\"\r\n          style={{ width: \"100%\" }}\r\n          defaultValue={selectedF}\r\n          placeholder=\"Select currency\"\r\n          onChange={handleChangeF}\r\n          optionLabelProp=\"label\"\r\n        >\r\n          { !fetch.loading ? Object.getOwnPropertyNames(fetch.products[1].market_data.current_price).map((c) =>\r\n            (\r\n              <Option key={c} value={c} label={c.toUpperCase()}>\r\n                {c.toUpperCase()}\r\n              </Option>\r\n            )\r\n          ) : null\r\n            }\r\n        </Select>\r\n        <Divider />\r\n        <Form.Label>Show msg´s</Form.Label>\r\n        <br />\r\n        <Switch checked={showMsg} onChange={showMsgHandle} />\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport UpdatePassword from \"../components/UpdatePassword\";\r\nimport Updateprofile from \"../components/UpdateProfile\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useData } from \"../contexts/DataContext\";\r\nimport \"../index.css\";\r\n\r\n\r\nexport default function Dashboard() {\r\n  /* HOTOVO CONTEXT -> TED IMPLEMENTACE \r\n  DO OSTATNICH KOMPONENT A NAHRAZENI useDATA hooku */\r\n  const { currentUser } = useAuth();\r\n  const { userData, loading } = useData();\r\n\r\n\r\n  const [toggled, setToggle] = useState(false);\r\n  const [toggled1, setToggle1] = useState(false);\r\n  const [username, setUsername] = useState(userData.displayName);\r\n\r\n  const style = {\r\n    background: \"none\",\r\n    color: \"inherit\",\r\n    border: \"none\",\r\n    padding: 0,\r\n    textAlign: \"left\",\r\n  };\r\n\r\n  const cardText = {\r\n    marginLeft: \"2.5rem\",\r\n    \r\n  };\r\n  const cardHeader = {\r\n    width: \"100%\",\r\n    backgroundColor: \"white\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(currentUser && userData){\r\n        setUsername(userData.displayName)\r\n      }      \r\n    }, [userData.displayName])\r\n\r\n  return (\r\n    \r\n    <div>\r\n      {!currentUser.emailVerified ? <Redirect to=\"/activation\" />: \"\"}\r\n      <Card className=\"justify-content-center mt-2\">\r\n        <Card.Body className=\"justify-content-center\">\r\n          <Card.Header border=\"primary\" style={cardHeader}>\r\n            Profile\r\n          </Card.Header>\r\n          <Card.Text style={cardText}>\r\n            Logged user: {currentUser.email} <br />\r\n            Username:  {!loading ? username : \"default\"}<br />\r\n            Role: \"Role\" <br />\r\n            {currentUser.emailVerified ? \"Email is  verified\": \"Email is not verified\"}\r\n          </Card.Text>\r\n        </Card.Body>\r\n\r\n        <Card.Body className=\"justify-content-center\">\r\n          <Card.Header border=\"primary\" style={cardHeader}>\r\n            <Button\r\n              style={style}\r\n              onClick={() => setToggle((toggled) => !toggled)}\r\n            >\r\n              {toggled ? \"-\" : \"+\"} Edit Profile\r\n            </Button>\r\n          </Card.Header>\r\n         \r\n          <div style={cardText}>\r\n          {toggled && (\r\n            <Updateprofile\r\n              displayName={currentUser.displayName}\r\n              email={currentUser.email}\r\n            />\r\n          )}\r\n          </div>\r\n        </Card.Body>\r\n\r\n        <Card.Body className=\"justify-content-center\" >\r\n          <Card.Header\r\n            className=\"cardHeaderRem\"\r\n            border=\"primary\"\r\n            style={cardHeader}\r\n          >\r\n            <Button\r\n              style={style}\r\n              onClick={() => setToggle1((toggled1) => !toggled1)}\r\n            >\r\n              {toggled1 ? \"-\" : \"+\"} Edit Password\r\n            </Button>\r\n          </Card.Header>\r\n          \r\n          <div style={cardText}>\r\n          {toggled1 && <UpdatePassword />}\r\n          </div>\r\n        </Card.Body>\r\n\r\n       \r\n      </Card>\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { useFetch } from \"./useFetch2\";\r\nfunction Graph(props) {\r\n  const data = {\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        lineTension: 0.3,\r\n        backgroundColor: \"rgb(180, 180, 180)\",\r\n        borderColor: props.isGreen ? \"rgb(137,218,89)\": \"rgb(255, 99, 71)\",\r\n        borderJoinStyle: 'round',\r\n        borderCapStyle: 'round',\r\n        borderWidth: 3,\r\n        pointRadius: 0,\r\n        pointHitRadius: 10,\r\n        lineTension: .2,\r\n        data: [],\r\n      },\r\n    ]\r\n  };\r\n  /*   const url = 'https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=50';\r\n   */\r\n  const url =\r\n    \"https://api.coingecko.com/api/v3/coins/\"+props.crypto.toLowerCase()+\"/market_chart?vs_currency=usd&days=50\";\r\n  const { loading, products } = useFetch(url);\r\n  /* console.log(products); */\r\n\r\n  if (!loading){\r\n    data.labels = Object.keys(products[\"prices\"]);\r\n    data.datasets[0].data = Object.keys(products[\"prices\"]).map(\r\n      (el) => products[\"prices\"][el][\"1\"]\r\n    );\r\n    /* console.log(data.datasets[0].data);\r\n    console.log(data.labels); */\r\n  }\r\n\r\n  /* console.log(getCurrentDate()) */\r\n\r\n  var date = new Date(new Date().setDate(new Date().getDate() - 30));\r\n  date.toLocaleDateString();\r\n  /* console.log(date); */\r\n  return (\r\n    <Line\r\n      data={data}\r\n      options={{\r\n        legend: false,\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              ticks: {\r\n                reverse: false,\r\n                beginAtZero: false,\r\n                display: false\r\n              \r\n              },\r\n              gridLines: {\r\n                display: false,\r\n                drawBorder: false,\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n                gridLines: {\r\n                display: false,\r\n                drawBorder: false,\r\n              },\r\n              ticks: {\r\n                reverse: false,\r\n                beginAtZero: false,\r\n                maxTicksLimit: 7,\r\n                display: false\r\n              \r\n              },\r\n            },\r\n          ],\r\n        },elements: { line: { fill: false } }\r\n      }}\r\n    />\r\n  );\r\n}\r\nexport default Graph;\r\n","import React, {useState} from \"react\";\r\nimport { Col, Container, Row, Image } from \"react-bootstrap\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Graph from \"../components/Graph\";\r\nimport { UpOutlined, DownOutlined } from \"@ant-design/icons\";\r\n\r\nfunction PriceHero(props) {\r\n  /* const url =\r\n  \"https://www.binance.com/api/v3/ticker/24hr?symbol=\" +\r\n  props.crypto +\r\n  props.currency; */\r\n  \r\n\r\n  const { crypto } = props;\r\n  \r\n  console.log(crypto);\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [isGreen, setIsGreen] = useState();\r\n  /* if(crypto.market_data.price_change_percentage_24h > 0){\r\n    setIsGreen(true);\r\n    console.log(isGreen)\r\n  } */\r\n  function handleClick(e) {\r\n    e.preventDefault();\r\n   setIsShow(!isShow)\r\n  }\r\n  if (crypto.market_data.price_change_percentage_24h > 0) {\r\n    let style = { color: \"red\" };\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"mt-2\" style={{ display: \"flex\" }}>\r\n      <Jumbotron style={{ width: \"70%\" }}>\r\n        {/* \r\n        zkusit udelat posuvny price hero, jakoby ze se vysuzeno zespoda lista s hodnotama?\r\n        \r\n        <Row className=\"ml-2 display-4\">{crypto.symbol.toUpperCase()}/</Row><Col style={{fontSize: 25, textAlign: \"center\"}}>{crypto.name}</Col> */}\r\n        <Row>\r\n          {\" \"}\r\n          <p className=\"display-4\">{crypto.symbol.toUpperCase()}</p>\r\n          <p style={{ marginTop: 35 }}>/{crypto.name}</p>\r\n        </Row>\r\n        <Container className=\"justify-content\">\r\n          <Row md={8}>\r\n            <Col>\r\n              Prices\r\n              {}\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Row>Change</Row>\r\n\r\n              <Row\r\n                style={\r\n                  crypto.market_data.price_change_percentage_24h > 0\r\n                    ? { color: \"green\" }\r\n                    : { color: \"red\" }\r\n                }\r\n              >\r\n                {crypto.market_data.price_change_24h}USD /{\" \"}\r\n                {crypto.market_data.price_change_percentage_24h} % / 24 hod.\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n           {isShow ? <UpOutlined onClick={handleClick} /> : <DownOutlined onClick={handleClick}/> }\r\n           \r\n          </Row>\r\n        </Container>\r\n        {isShow ? <div> asd </div> : \"\" }\r\n      </Jumbotron>\r\n      \r\n      <Jumbotron className=\"ml-2\" style={{ width: \"30%\" }}>\r\n        <Graph crypto={crypto.id} isGreen={isGreen}/>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\nexport default PriceHero;\r\n","import { includes } from \"lodash-es\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport PriceHero from \"../components/PriceHero\";\r\nimport { useFetch } from \"../components/useFetch\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useData } from \"../contexts/DataContext\";\r\nimport { Col, Container, Row, Jumbotron, Button } from \"react-bootstrap\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\n\r\nconst Actualprice = (props) => {\r\n  const { currentUser } = useAuth();\r\n  const { userData, setData } = useData();\r\n\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [showMsg, setShowMsg] = useState();\r\n  const [fewCrypto, setFewCrypto] = useState();\r\n  const [defaultCrypto, setDefaultCrypto] = useState();\r\n  const [cryptoList, setCryptoList] = useState([]);\r\n  const [cryptoData, setCryptoData] = useState([]);\r\n  \r\n\r\n  \r\n  async function getData(crypto) {  \r\n     const response = await fetch(\"http://api.coingecko.com/api/v3/coins/\");\r\n    const data = await response.json();\r\n  \r\n    const data2 = data.filter((obj) => crypto.includes(obj.symbol))\r\n    \r\n    setCryptoData(data2)\r\n    \r\n    /* .then((data) => {\r\n      \r\n      let data2 = data.filter((item) => {\r\n       sorted.includes(item.symbol)\r\n      });\r\n      console.log(data2)\r\n      setCryptoData(data2)\r\n    })  */\r\n    \r\n  }\r\n/*     \r\n  const fetch = useFetch(\"http://api.coingecko.com/api/v3/coins/\");\r\n  console.log(fetch.products) */\r\n  \r\n  async function click(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      await setData(false, \"showMsg\");\r\n      setShowMsg(false);\r\n      console.log(\"click\");\r\n    } catch {\r\n      setError(\"Failed\");\r\n    }\r\n  }\r\n /* \r\n GET DATA -> FILTER DATA -> PUSH TO PROPS - > RENDER\r\n |\r\n Bude lepsi, kdyz se rto nacte komplet v data context a v actual rpúice jen vyfiltruje\r\n \r\n */\r\n\r\n\r\n  useEffect(() => {\r\n    if (currentUser && userData) {\r\n      if (userData.cryptoList.length === 0 || typeof userData.cryptoList == \"undefined\") {\r\n        console.log(\"userDataOK\")\r\n        setCryptoList([\"btc\", \"ltc\", \"eth\", \"ada\"]);\r\n        setDefaultCrypto(true);\r\n        \r\n        console.log(cryptoList)\r\n      } else {\r\n        if (userData.cryptoList.length < 3) setFewCrypto(true);\r\n        setCryptoList(userData.cryptoList);\r\n        setShowMsg(userData.showMsg);\r\n        setDefaultCrypto(false);\r\n        \r\n        console.log(\"else\"+cryptoList)\r\n        \r\n        \r\n      }\r\n      \r\n      \r\n    }else {\r\n      setCryptoList([\"btc\", \"ltc\", \"eth\", \"ada\"]);\r\n    }\r\n        \r\n    setLoading(false);\r\n  }, [userData]);\r\n\r\n  useEffect(() => {\r\n    if(cryptoList){\r\n      getData(cryptoList)\r\n    }\r\n  }, [userData, cryptoList]);\r\n\r\n  return (\r\n    <div>\r\n      {!currentUser ? (\r\n        <Jumbotron\r\n          className=\"jumbotron-fluid mt-3\"\r\n          style={{ textAlign: \"center\", padding: \"20px\" }}\r\n        >\r\n          You are not logged in! For more crypto \r\n          <Link to=\"/login\"> Log in</Link>\r\n        </Jumbotron>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {defaultCrypto ? (\r\n        <Jumbotron\r\n          className=\"jumbotron-fluid mt-3\"\r\n          style={{ textAlign: \"center\", padding: \"20px\" }}\r\n        >\r\n          You did not specify crypto currencies! Go to\r\n          <Link to=\"/dashboard\"> Dashboard</Link>\r\n        </Jumbotron>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {fewCrypto && showMsg ? (\r\n        <Jumbotron\r\n          className=\"jumbotron-fluid mt-3\"\r\n          style={{ textAlign: \"center\", padding: \"20px\" }}\r\n        >\r\n          There is few crypto listed! Go to\r\n          <Link to=\"/dashboard\"> Dashboard</Link> or click{\" \"}\r\n          <a href=\"#\" onClick={click}>\r\n            Click me\r\n          </a>{\" \"}\r\n          to dissapear this message\r\n        </Jumbotron>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {/* {loading ? \"loading\" : cryptoList.map(item => { return <PriceHero title={props.title} subTitle={props.subTitle} text={props.text} key={item.id} crypto={crypto} /> })} */}\r\n      {loading\r\n        ? \"loading\"\r\n        : cryptoData.map((item) => (\r\n            <PriceHero\r\n              title={props.title}\r\n              subTitle={props.subTitle}\r\n              text={props.text}\r\n              key={item.id}\r\n              crypto={item}\r\n              \r\n              \r\n            />\r\n          ))}\r\n          \r\n      <br />\r\n    </div>\r\n  );\r\n};\r\nexport default Actualprice;\r\n{\r\n  /* <PriceHero\r\ntitle={props.title}\r\nsubTitle={props.subTitle}\r\ntext={props.text}\r\ncrypto={crypto}\r\n/> */\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Dashboard from \"../components/Dashboard\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport Activation from \"../components/Activation\";\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nexport default function Dashboardpage(props) {\r\n  const { currentUser } = useAuth();\r\n  /*   console.log(currentUser)\r\n\r\n  */\r\n\r\n  const [verified, setVerified] = useState(currentUser.emailVerified);\r\n\r\n  return (\r\n    <div>\r\n      {(verified) ? (\r\n        <Redirect to=\"/dashboard\" />\r\n      ) : (\r\n        <Redirect to=\"/activation\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nfunction Hero(props) {\r\n  return (\r\n    <Jumbotron className=\"jumbotron-fluid mt-5\">\r\n      <Container>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md={8} sm={6} xs={9}>\r\n            {props.title && <h1 className=\"display-1\">{props.title}</h1>}\r\n            {props.subTitle && (\r\n              <h2 className=\"display-4 font-weight-light\">{props.subTitle}</h2>\r\n            )}\r\n            {props.text && (\r\n              <h3 className=\"lead font-weight-light\">{props.text}</h3>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n}\r\nexport default Hero;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Content from \"../components/Content\";\r\nimport Hero from \"../components/Hero\";\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      msg: \"\",\r\n      disabled: false,\r\n      emailSent: null,\r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    console.log(event);\r\n    const target = event.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      disabled: true,\r\n      emailSent: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Hero title={this.props.title} />\r\n        <Content>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Form.Group>\r\n              <Form.Label htmlFor=\"full-name\">Full Name</Form.Label>\r\n              <Form.Control\r\n                id=\"full-name\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n              <Form.Control\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label htmlFor=\"msg\">Message</Form.Label>\r\n              <Form.Control\r\n                id=\"msg\"\r\n                name=\"msg\"\r\n                as=\"textarea\"\r\n                rows=\"10\"\r\n                value={this.state.msg}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              className=\"d-inline-block\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              disabled={this.state.disabled}\r\n            >\r\n              Send\r\n            </Button>\r\n            {this.state.emailSent === true && (\r\n              <p className=\"d-inline success-msg\">Email Sent</p>\r\n            )}\r\n            {this.state.emailSent === false && (\r\n              <p className=\"d-inline error-msg\">Email Sent</p>\r\n            )}\r\n          </Form>\r\n        </Content>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Hero from \"../components/Hero\";\r\nimport { Container, Image } from \"react-bootstrap\";\r\nimport { useData } from \"../contexts/DataContext\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"../index.css\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport \"../index.css\";\r\nimport { firestore } from \"../firebase\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Upload,\r\n  Rate,\r\n  Checkbox,\r\n  Input,\r\n  Space,\r\n  Divider,\r\n  DatePicker,\r\n} from \"antd\";\r\n\r\nimport {\r\n  RightOutlined,\r\n  FileMarkdownFilled,\r\n  EditTwoTone,\r\n  DeleteTwoTone,\r\n  CheckCircleTwoTone,\r\n  ExclamationOutlined,\r\n  LeftOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nfunction Homepage(props) {\r\n  /* DODELAT FIRESTORE DATABAZI */\r\n  const [taskNumber, setTaskNumber] = useState();\r\n  const [todos, setTodos] = useState([\r\n    /*   {\r\n      subject: \"Subject\",\r\n      details:\r\n        \"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Pellentesque arcu. Nullam dapibus fermentum ipsum. Nunc auctor. \",\r\n      duedate: \"2021-06-16 07:41\",\r\n      id: \"1\",\r\n      slider: \"3\",\r\n      status: \"todo\",\r\n    }, */\r\n  ]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState();\r\n  const [rateColor, setRateColor] = useState(\"#40a9ff\");\r\n  const { userData, setData } = useData();\r\n  const { currentUser } = useAuth();\r\n\r\n  function changeRateColor(value) {\r\n    console.log(value);\r\n    if (value == 1) setRateColor(\"#40a9ff\");\r\n    if (value == 3) setRateColor(\"#610b00\");\r\n    if (value == 2) setRateColor(\"#ffc069\");\r\n  }\r\n\r\n  async function onFinish(fieldsValue) {\r\n    const values = {\r\n      ...fieldsValue,\r\n    };\r\n\r\n    if (fieldsValue[\"duedate\"]) {\r\n      values.duedate = fieldsValue[\"duedate\"].format(\"DD-MM-YYYY HH:mm\");\r\n    }\r\n\r\n    if (todos) {\r\n      values.id = todos.length;\r\n    }\r\n    const newTodos = todos.slice();\r\n    newTodos.push(values);\r\n    setTodos(newTodos);\r\n    console.log(todos);\r\n\r\n    /*  const cityRef = firestore.collection(\"users\").doc(currentUser.uid);\r\n     await cityRef.update({ todos: values }) */\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  const getUserStars = (points) => {\r\n    let i = 0;\r\n    let stars = [];\r\n    let exColor;\r\n    if (points == 1) exColor = \"#40a9ff\";\r\n    if (points == 3) exColor = \"#610b00\";\r\n    if (points == 2) exColor = \"#ffc069\";\r\n    while (i < points) {\r\n      i++;\r\n      stars.push(\r\n        <ExclamationOutlined\r\n          style={{ marginTop: \"5%\", marginLeft: \"-7%\", color: exColor }}\r\n        />\r\n      );\r\n    }\r\n    return stars;\r\n  };\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const removeTask = (todo) => {};\r\n\r\n  const statusUpdate = (status, taskid) => {\r\n    let newTodos = [...todos];\r\n\r\n    switch (status) {\r\n      case \"todo\":\r\n        newTodos[taskid] = { ...newTodos[taskid], status: \"ongoing\" };\r\n        setTodos(newTodos);\r\n        break;\r\n      case \"ongoing\":\r\n        newTodos[taskid] = { ...newTodos[taskid], status: \"finished\" };\r\n        setTodos(newTodos);\r\n        break;\r\n      case \"finished\":\r\n        newTodos[taskid] = { ...newTodos[taskid], status: \"ongoing\" };\r\n        setTodos(newTodos);\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    console.log(todos);\r\n\r\n  };\r\n  /*\r\n  https://linguinecode.com/post/how-to-get-form-data-on-submit-in-reactjs \r\n  \r\n  \r\n  https://ant.design/components/form/\r\n  \r\n  https://www.youtube.com/watch?v=a00NRSFgHsY\r\n  \r\n  https://entry-cz.udemy.com/course/the-complete-web-development-bootcamp/learn/lecture/19655714#overview\r\n  */\r\n  // Should format date value before submit.\r\n  /* \r\n    \r\n    https://dev.to/andyrewlee/cheat-sheet-for-updating-objects-and-arrays-in-react-state-48np\r\n     –––––––––––––––-\r\n    Just to clarify, the solution was simpler than expected.\r\n\r\nIn\r\n\r\nconst showTasks = () =>  taskList.map((item, index) => (\r\n        <SingleTask\r\n            taskObj={item}\r\n            removeTask ={removeTask}\r\n            key = {item.id}\r\n        />\r\n        )\r\n    )\r\nI was passing map index as a key, when I changed it to {item.id} everything works as expected.\r\n    ––––\r\n    https://stackoverflow.com/questions/55197957/update-list-of-displayed-components-on-deletion-in-react/55198360\r\n    */\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron className=\"mt-5\">TASK PLANNER</Jumbotron>\r\n      <Container className=\"justify-content mt-5\">\r\n        <Row>\r\n          <Form\r\n            className=\"ant-form\"\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            style={{ width: \"100%\" }}\r\n            initialValues={{\r\n              status: \"todo\",\r\n              slider: 2,\r\n            }}\r\n          >\r\n            <Row>\r\n              <Col span={12}>\r\n                {\" \"}\r\n                <Form.Item>\r\n                  <span className=\"ant-form-text\">Task Number #</span>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col span={6}>\r\n                <Form.Item\r\n                  name=\"subject\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input your Username!\" },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<RightOutlined className=\"site-form-item-icon\" />}\r\n                    placeholder=\" Subject\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={6} offset={12}>\r\n                {\" \"}\r\n                <Form.Item name=\"duedate\">\r\n                  <DatePicker\r\n                    placeholder=\"Due date\"\r\n                    format=\"YYYY-MM-DD HH:mm\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={12}>\r\n                <Form.Item name=\"details\">\r\n                  <Input.TextArea placeholder=\"Put details\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={6} offset={6}>\r\n                <Form.Item name=\"slider\">\r\n                  <Rate\r\n                    defaultValue={2}\r\n                    count={3}\r\n                    style={{ color: rateColor }}\r\n                    onHoverChange={(value) => changeRateColor(value)}\r\n                    character={({ index }) => index + 1}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col>\r\n                <Form.Item\r\n                  name=\"status\"\r\n                  rules={[\r\n                    {\r\n                      message: \"Please pick an item!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Radio.Group>\r\n                    <Radio.Button value=\"todo\">TODO</Radio.Button>\r\n                    <Radio.Button value=\"ongoing\">ONGOING</Radio.Button>\r\n                    <Radio.Button value=\"finished\">FINISHED</Radio.Button>\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={6}>\r\n                <Form.Item>\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Row>\r\n        <Divider />\r\n        <Row>\r\n          <Col span={8}>\r\n            <Row>TODO</Row>\r\n            <Row>\r\n              {todos\r\n                ? todos.map((el) => {\r\n                    if (el.status == \"todo\")\r\n                      return (\r\n                        <Container\r\n                          key={el.id}\r\n                          style={{ width: \"90%\" }}\r\n                          className=\"ant-form m-1\"\r\n                        >\r\n                          <Row>\r\n                            <Col span={10}>\r\n                              <Row>\r\n                                {\" \"}\r\n                                {el.subject} #{el.id} &nbsp;\r\n                                {el.slider ? getUserStars(el.slider) : \"\"}{\" \"}\r\n                              </Row>\r\n                            </Col>\r\n                            <Col span={4} offset={10}>\r\n                              <DeleteTwoTone\r\n                                onClick={() => removeTask(el.id)}\r\n                              />\r\n\r\n                              <RightOutlined\r\n                                onClick={() => statusUpdate(\"todo\", el.id)}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>{el.details}</Row>\r\n\r\n                          <Row style={{ color: \"#DDDDDD\" }}>\r\n                            {!el.duedate ? \"no duedate\" : el.duedate}\r\n                          </Row>\r\n                        </Container>\r\n                      );\r\n                  })\r\n                : \"THERE IS NO TASK TO SEE. ADD ONE\"}\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col span={8}>\r\n            <Row>ONGOING</Row>\r\n            <Row>\r\n              {todos\r\n                ? todos.map((el) => {\r\n                    if (el.status == \"ongoing\")\r\n                      return (\r\n                        <Container\r\n                          key={el.id}\r\n                          style={{ width: \"90%\" }}\r\n                          className=\"ant-form m-1\"\r\n                        >\r\n                          <Row>\r\n                            <Col span={10}>\r\n                              <Row>\r\n                                {\" \"}\r\n                                {el.subject} #{el.id} &nbsp;\r\n                                {el.slider ? getUserStars(el.slider) : \"\"}{\" \"}\r\n                              </Row>\r\n                            </Col>\r\n                            <Col span={4} offset={10}>\r\n                              <DeleteTwoTone\r\n                                onClick={() => removeTask(el.id)}\r\n                              />\r\n                              <CheckCircleTwoTone\r\n                                onClick={() => statusUpdate(\"ongoing\", el.id)}\r\n                                twoToneColor=\"#52c41a\"\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>{el.details}</Row>\r\n\r\n                          <Row style={{ color: \"#DDDDDD\" }}>\r\n                            {!el.duedate ? \"no duedate\" : el.duedate}\r\n                          </Row>\r\n                        </Container>\r\n                      );\r\n                  })\r\n                : \"THERE IS NO TASK TO SEE. ADD ONE\"}\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col span={8}>\r\n            <Row>FINISHED</Row>\r\n            <Row>\r\n              {todos\r\n                ? todos.map((el) => {\r\n                    if (el.status == \"finished\")\r\n                      return (\r\n                        <Container\r\n                          key={el.id}\r\n                          style={{ width: \"90%\" }}\r\n                          className=\"ant-form m-1\"\r\n                        >\r\n                          <Row>\r\n                            <Col span={10}>\r\n                              <Row>\r\n                                {\" \"}\r\n                                {el.subject} #{el.id} &nbsp;\r\n                                {el.slider ? getUserStars(el.slider) : \"\"}{\" \"}\r\n                              </Row>\r\n                            </Col>\r\n                            <Col span={4} offset={10}>\r\n                              <DeleteTwoTone\r\n                                onClick={() => removeTask(el.id)}\r\n                              />\r\n                              <LeftOutlined\r\n                                onClick={() => statusUpdate(\"finished\", el.id)}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>{el.details}</Row>\r\n\r\n                          <Row style={{ color: \"#DDDDDD\" }}>\r\n                            {!el.duedate ? \"no duedate\" : el.duedate}\r\n                          </Row>\r\n                        </Container>\r\n                      );\r\n                  })\r\n                : \"THERE IS NO TASK TO SEE. ADD ONE\"}\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <Divider />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport Footer from \"./components/Footer\";\r\nimport ForgotPassword from \"./components/ForgotPassword\";\r\nimport Login from \"./components/Login\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport Signup from \"./components/Signup\";\r\nimport Activation from \"./components/Activation\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport { useAuth } from \"./contexts/AuthContext\";\r\nimport Actualprice from \"./pages/Actualprice\";\r\nimport Dashboardpage from \"./pages/Dashboardpage\";\r\nimport Contactpage from \"./pages/Contactpage\";\r\nimport Homepage from \"./pages/Homepage\";\r\nimport { UserProvider } from \"./contexts/DataContext\";\r\n\r\n\r\n\r\nexport default function App(){\r\n\r\n  const { currentUser } = useAuth();\r\n\r\n    const home = {\r\n      title: \"Bla\",\r\n      subTitle: \"Ble\",\r\n      text: \"Bruh\",\r\n    };\r\n    const actualprice = {\r\n      title: \"Price\",\r\n      subTitle: \"Some kind of subtitle\",\r\n      text: \"Some kind of text on Aboutscreen\",\r\n    };\r\n    const contact = {\r\n      title: \"Let's talk\",\r\n      subTitle: \"Some kind of subtitle\",\r\n      text: \"Some kind of text on Contactscreen\",\r\n      size: 2,\r\n    };\r\n   \r\n    return (\r\n      <div>\r\n      <Router> \r\n          <Container className=\"p-5\" fluid={false}>\r\n            <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\r\n              <Navbar.Brand>World of Automatization</Navbar.Brand>\r\n              <Navbar.Toggle\r\n                className=\"border-0\"\r\n                aria-controls=\"navbar-toggle\"\r\n              />\r\n              <Navbar.Collapse id=\"navbar-toggle\">\r\n                <Nav className=\"ml-auto\">\r\n                  <Link className=\"nav-link\" to=\"/\">\r\n                    Home\r\n                  </Link>\r\n                  <Link className=\"nav-link\" to=\"/actualprice\">\r\n                    Prices\r\n                  </Link>\r\n                  <Link className=\"nav-link\" to=\"/contact\">\r\n                    Contact\r\n                  </Link>\r\n                  {currentUser ? <Link className=\"nav-link\" to=\"/dashboard\">\r\n                   Dashboard\r\n                   </Link> :  <Link className=\"nav-link\" to=\"/login\">\r\n                   Login\r\n                   </Link>}\r\n                 \r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar> \r\n           \r\n            <Route\r\n              path=\"/\"\r\n              exact\r\n              render={() => (\r\n                <Homepage\r\n                  title={home.title}\r\n                  subTitle={home.subTitle}\r\n                  text={home.text}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/actualprice\"\r\n              exact\r\n              render={() => (\r\n                \r\n                <Actualprice\r\n                  title={actualprice.title}\r\n                  subTitle={actualprice.subTitle}\r\n                  text={actualprice.text}\r\n                />\r\n               \r\n                )}\r\n            /> \r\n            <Route\r\n              path=\"/contact\"\r\n              exact\r\n              render={() => (\r\n                <Contactpage\r\n                  title={contact.title}\r\n                  subTitle={contact.subTitle}\r\n                  text={contact.text}\r\n                  size={contact.size}\r\n                />\r\n              )}\r\n            />\r\n             \r\n            <Switch>\r\n           \r\n              <Route path=\"/signup\" component={Signup} />\r\n              <PrivateRoute exact path=\"/activation\" component={Activation} />\r\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <PrivateRoute exact path=\"/home\" component={Dashboardpage} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/forgotPassword\" component={ForgotPassword} />\r\n              \r\n            </Switch>\r\n            <Footer isLogged={currentUser}></Footer> \r\n            \r\n          </Container>\r\n    \r\n      </Router>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { AuthProvider } from \"./contexts/AuthContext\";\r\nimport { UserProvider } from \"./contexts/DataContext\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n    <UserProvider>\r\n      <App />  \r\n      </UserProvider>\r\n      </AuthProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}